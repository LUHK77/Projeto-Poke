/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Models.Poke.Poke;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author Aluno
 */
public class CombateGUI extends javax.swing.JFrame {
    private Poke p1;
    private Poke p2;
    /**
     * Creates new form CombateGUI
     */
    public CombateGUI() {
        initComponents();
        setCenario();
    }
    
    public void setCenario(){
        ImageIcon imageBackground = new ImageIcon(getClass().getResource("/img/cenario.gif"));
        JLabel labelBackground = new JLabel(imageBackground);
        labelBackground.setBounds(0, 0, 1920, 1080);
        getContentPane().add(labelBackground);
    }
      public void setImage(){
      ImageIcon img = new ImageIcon();
      lblP1Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/GaloCururu/default.gif")));
      lblP2Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Papaco/default.gif")));
      
    } 
      
    /*public class InverterImagem {

    public static void main(String[] args) throws IOException {
        // Carregar a imagem original
        BufferedImage imagemOriginal = ImageIO.read(new File("caminho/para/sua/imagem.jpg"));

        // Inverter a imagem horizontalmente
        BufferedImage imagemInvertida = inverterImagem(imagemOriginal);

        // Criar o ImageIcon com a imagem invertida
        ImageIcon imagemIconInvertida = new ImageIcon(imagemInvertida);

        // Criar a janela
        JFrame frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 400);

        // Criar o JLabel e adicionar o ImageIcon
        JLabel label = new JLabel(imagemIconInvertida);
        frame.add(label);

        // Exibir a janela
        frame.setVisible(true);
    } 

    // Método para inverter a imagem horizontalmente
    public BufferedImage inverterImagem(BufferedImage imagemOriginal) {
        int largura = imagemOriginal.getWidth();
        int altura = imagemOriginal.getHeight();
        
        // Criar uma nova imagem com as mesmas dimensões
        BufferedImage imagemInvertida = new BufferedImage(largura, altura, imagemOriginal.getType());
        
        // Inverter a imagem pixel por pixel
        for (int x = 0; x < largura; x++) {
            for (int y = 0; y < altura; y++) {
                // Copiar os pixels de forma invertida
                imagemInvertida.setRGB(largura - 1 - x, y, imagemOriginal.getRGB(x, y));
            }}
        return imagemInvertida;
    }*/
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblP1Img = new javax.swing.JLabel();
        lblP2Img = new javax.swing.JLabel();
        lblP2Nome = new javax.swing.JLabel();
        lblP1Nome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblP1Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/GaloCururu/default.gif"))); // NOI18N

        lblP2Img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Papaco/default.gif"))); // NOI18N

        lblP2Nome.setText("jLabel1");

        lblP1Nome.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(443, 443, 443)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblP1Img)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(lblP1Nome)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 390, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblP2Img, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(438, 438, 438))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblP2Nome)
                        .addGap(587, 587, 587))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(467, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblP2Nome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblP2Img))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblP1Nome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblP1Img)))
                .addGap(253, 253, 253))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CombateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CombateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CombateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CombateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CombateGUI().setVisible(true);
            }
        });
        
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblP1Img;
    private javax.swing.JLabel lblP1Nome;
    private javax.swing.JLabel lblP2Img;
    private javax.swing.JLabel lblP2Nome;
    // End of variables declaration//GEN-END:variables
}
